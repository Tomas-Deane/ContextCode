"""Implement EAV model for multi-field metrics and remove redundant device name

Revision ID: 08c1560eb889
Revises: 5ee19086c843
Create Date: 2025-03-10 19:25:58.087665

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '08c1560eb889'
down_revision = '5ee19086c843'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('metric_field',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metric_id', sa.Integer(), nullable=False),
    sa.Column('field_index', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(length=50), nullable=False),
    sa.Column('field_type', sa.String(length=20), nullable=False),
    sa.CheckConstraint('field_index BETWEEN 1 AND 5', name='ck_field_index_range'),
    sa.ForeignKeyConstraint(['metric_id'], ['metric.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('metric_id', 'field_index', name='uq_metric_field_index')
    )
    op.create_table('reading_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reading_id', sa.Integer(), nullable=False),
    sa.Column('metric_field_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['metric_field_id'], ['metric_field.id'], ),
    sa.ForeignKeyConstraint(['reading_id'], ['reading.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reading_id', 'metric_field_id', name='uq_reading_metric_field')
    )
    with op.batch_alter_table('device', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['guid'])
        batch_op.drop_column('name')

    with op.batch_alter_table('reading', schema=None) as batch_op:
        batch_op.drop_column('value')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reading', schema=None) as batch_op:
        batch_op.add_column(sa.Column('value', mysql.FLOAT(), nullable=False))

    with op.batch_alter_table('device', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', mysql.VARCHAR(length=50), nullable=False))
        batch_op.drop_constraint(None, type_='unique')

    op.drop_table('reading_value')
    op.drop_table('metric_field')
    # ### end Alembic commands ###
